import pandas as pd

# Create a simple dataset
data = {
    'Vehicle_Speed': [60, 80, 100, 40, 70, 110, 90, 55, 85, 120],
    'Weather_Condition': [1, 2, 1, 3, 2, 1, 3, 2, 1, 3],  # 1=Clear, 2=Rain, 3=Fog
    'Road_Type': [1, 2, 2, 3, 1, 1, 2, 3, 1, 2],          # 1=Highway, 2=Urban, 3=Rural
    'Light_Condition': [1, 2, 1, 1, 2, 1, 2, 2, 1, 2],    # 1=Day, 2=Night
    'Driver_Age': [25, 40, 35, 22, 55, 28, 30, 26, 38, 45],
    'Accident_Severity': [2, 3, 3, 1, 2, 3, 2, 1, 3, 3]
}

df = pd.DataFrame(data)
print(df)
# Define dependent and independent variables
X = df[['Vehicle_Speed', 'Weather_Condition', 'Road_Type', 'Light_Condition', 'Driver_Age']]  # Independent
y = df['Accident_Severity']  # Dependent
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Split data into train and test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Train model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict on test data
y_pred = model.predict(X_test)

# Evaluate
print("Mean Squared Error:", mean_squared_error(y_test, y_pred))
print("RÂ² Score:", r2_score(y_test, y_pred))
import joblib
joblib.dump(model, 'accident_severity_model.pkl')
print("Model saved successfully!")
import joblib
joblib.dump(model, 'accident_severity_model.pkl')
print("Model saved successfully!")

# Load saved model
model = joblib.load('accident_severity_model.pkl')

# Hypothetical new case
new_data = pd.DataFrame({
    'Vehicle_Speed': [85],
    'Weather_Condition': [2],
    'Road_Type': [1],
    'Light_Condition': [2],
    'Driver_Age': [30]
})

# Predict accident severity
prediction = model.predict(new_data)
print("Predicted Accident Severity:", prediction[0])
